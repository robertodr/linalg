dist: xenial
language: cpp
sudo: false
before_cache:
  - conda deactivate
  - conda remove --name p4env --all
cache:
  directories:
    - $HOME/miniconda

env:
  global:
    - CTEST_OUTPUT_ON_FAILURE=1

jobs:
  include:
    - stage: Testing
      addons: &1
        apt:
          packages:
            - liblapack-dev
            - clang-3.6
            - libhdf5-serial-dev
            - gfortran
      env:
        - CXX_COMPILER='clang++-3.6'
        - PYTHON_VER='3.6'
        - C_COMPILER='clang-3.6'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='release'
    - addons: &2
        apt:
          packages:
            - python-numpy
            - liblapack-dev
            - libhdf5-serial-dev
            - gfortran
      env:
        - CXX_COMPILER='g++'
        - PYTHON_VER='3.7'
        - C_COMPILER='gcc'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='release'

before_install:
  - uname -a
  - free -m
  - df -h
  - ulimit -a
  - mkdir -p $HOME/miniconda

install:
  - ./.scripts/miniconda.sh
  - export PATH="$HOME/miniconda/bin:$PATH"
  - conda create -q -n p4env python=$PYTHON_VER
  - source activate p4env
  - >
      conda install
      blas=*=mkl
      mkl-include
      pybind11
      xsimd
      xtensor-blas
      xtensor-io
      xtensor-python
      -c conda-forge
  - conda list

before_script:
  - python -V
  - python -c 'import numpy; print(numpy.version.version)'
  - cd ${TRAVIS_BUILD_DIR}
  - export CXX=${CXX_COMPILER}
  - export CC=${C_COMPILER}
  - export FC=${Fortran_COMPILER}
  - ${CXX_COMPILER} --version
  - ${Fortran_COMPILER} --version
  - ${C_COMPILER} --version
  - >
      cmake -Bbuild -H.
      -DCMAKE_CXX_COMPILER=${CXX_COMPILER}
      -DCMAKE_C_COMPILER=${C_COMPILER}
      -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
      -DCMAKE_PREFIX_PATH=${HOME}/miniconda/envs/p4env
      -DPYTHON_EXECUTABLE="${HOME}/miniconda/envs/p4env/bin/python"
      -DCMAKE_INSTALL_PREFIX=${TRAVIS_BUILD_DIR}/Install
  - cmake --build build
